{
  "hash": "1688be985724edb25dc3635823f3e21a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"marquee\"\ndescription: |\n  Parse markdown for R graphics\nauthor: Michael Ellsworth\ndate: 2024-05-23\n---\n\n\nToday's post explores an R package `marquee`, developed to parse markdown for R graphics. My first crack at the demo in the [following blog post](https://www.tidyverse.org/blog/2024/05/marquee-0-1-0/) was futile due to the inherent limitations in the default graphics device in Windows (explained in the post under the [limitations section](https://www.tidyverse.org/blog/2024/05/marquee-0-1-0/#limitations)), so I turned to my MacBook to run through a few of the examples provided.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(marquee)\nlibrary(ggplot2)\nmd_text <- \"\n# Heading 1\n## Heading 2\n### Heading 3\n\"\n\nggplot(mtcars) + \n  geom_point(aes(x = mpg, y = disp)) + \n  ggtitle(md_text) + \n  theme(plot.title = element_marquee(size = 8, width = unit(16, \"cm\")))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\nThe first thing I notice on my mac is that the rendered markdown text is super grainy compared with the plot text. Likely a result of the limitations explained in the blog post. Looks like a lot of potential here but perhaps best suited for folks with a better understanding of computer graphics than me.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}