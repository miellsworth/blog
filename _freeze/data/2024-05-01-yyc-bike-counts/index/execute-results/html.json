{
  "hash": "40da9df6d5899ede1d25e2d7b21aff58",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"YYC bike counts\"\ndescription: |\n  Tune up day\nauthor: Michael Ellsworth\ndate: 2024-05-01\n---\n\n\nMay 1st, 2024. Today is tune up day. The day EVERYONE (me) has been waiting for. Easily one of the best perks about working at Suncor is FREE bicycle parking and FREE annual tune ups. It's supposed to snow again today but that will not dissuade me from getting my bike all fixed up for the summer season.\n\nIn honour of tune up day, why not explore some City of Calgary bicycle data. The City has a plethora of [public data](https://data.calgary.ca/) available for perusal and bicycle data is no different. A quick search for \"bicycle\" returns a number of different datasets but the one I'm going to play around with is [Bike Traffic Count](https://data.calgary.ca/Transportation-Transit/Bike-Traffic-Count/pubj-un4t).\n\n\n::: {.cell warnings='false'}\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(janitor)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'janitor'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(lubridate)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'lubridate'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tidyr)\n\ndf <- read_csv(\"https://data.calgary.ca/api/views/pede-tz7g/rows.csv?date=20240501&accessType=DOWNLOAD\") %>% janitor::clean_names()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 153393 Columns: 102\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (4): User Type, Monitoring Location, Direction, ID\ndbl  (97): Total, 0000, 0015, 0030, 0045, 0100, 0115, 0130, 0145, 0200, 0215...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\nLooks we've got roughly four years of data to work with. A pretty hefty size as well.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npaste0(\"# rows: \", dim(df)[1], \", # columns: \", dim(df)[2])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"# rows: 153393, # columns: 102\"\n```\n\n\n:::\n\n```{.r .cell-code}\npaste0(\"Date range: \", min(df$date), \" - \", max(df$date))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Date range: 2018-01-01 - 2024-12-31\"\n```\n\n\n:::\n\n```{.r .cell-code}\npryr::object_size(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n143.72 MB\n```\n\n\n:::\n:::\n\n\nApparently we also have some pedestrian data hiding in here as well. Let's take that out for now.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>% count(user_type)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  user_type      n\n  <chr>      <int>\n1 Bikes     110499\n2 Peds       42894\n```\n\n\n:::\n\n```{.r .cell-code}\ndf_bikes <- df %>%\n  filter(user_type == \"Bikes\")\n```\n:::\n\n\nThe dataframe is structured in a semi-wide format with a number of columns representing the time when the count was made. I'd rather have a single datetime column so we're going to try and `pivot_longer()` this bad boy.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_bikes_long <- df_bikes %>%\n  pivot_longer(\n    cols = c(x0000:x2345), \n    names_to = \"time\", \n    values_to = \"count\"\n    ) %>%\n  mutate(date_time = ymd_hm(paste0(date, time)))\n```\n:::\n\n\nThis balloons the size of the dataset but it's tidy. And tidy is best.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npaste0(\"# rows: \", dim(df_bikes_long)[1], \", # columns: \", dim(df_bikes_long)[2])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"# rows: 10607904, # columns: 9\"\n```\n\n\n:::\n\n```{.r .cell-code}\npryr::object_size(df_bikes_long)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n777.45 MB\n```\n\n\n:::\n:::\n\n\nSince I have no use for the fifteen minute intervals in this dataset, I'm going to summarise the bike counts into daily counts by each monitoring location. This takes the dataset down to a much more reasonable size.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_daily_count <- df_bikes_long %>%\n  mutate(count = replace_na(count, 0)) %>%\n  group_by(date, monitoring_location) %>%\n  summarise(daily_total = sum(count)) %>%\n  ungroup()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'date'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\npaste0(\"# rows: \", dim(df_daily_count)[1], \", # columns: \", dim(df_daily_count)[2])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"# rows: 48316, # columns: 3\"\n```\n\n\n:::\n\n```{.r .cell-code}\npryr::object_size(df_daily_count)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n1.16 MB\n```\n\n\n:::\n:::\n\n\nAlright, let's take a look at a few interesting monitoring locations.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\ninteresting_locations <- c(\n  \"Bow River Pathway\", \n  \"10 Street North of 5 Ave NW\",\n  \"Memorial Drive at Prince's Island\",\n  \"Memorial Drive at 19 St NW\"\n  )\n\ndf_daily_count %>%\n  filter(monitoring_location %in% interesting_locations) %>%\n  ggplot(aes(x = date, y = daily_total, col = monitoring_location)) +\n  geom_point() +\n  theme_classic() +\n  labs(\n    colour = NULL,\n    x = \"\",\n    y = \"Daily Bike Count\"\n  ) +\n  theme(\n    legend.position = \"bottom\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nPretty clear seasonality in this data! Must be the harsh winters or something. Also interesting to see a noticeable drop off in cycling after 2020, likely because folks aren't commuting as much. It might be interesting to look into the weekend data only to see if the same drop-off is observed. That would help confirm that theory, but I think that's it for me today.\n\nPS - tune up day was NOT a success. Tune up guy was no longer accepting bikes by the time I got there. He basically laughed in my face! Apparently tune up day is popular.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}