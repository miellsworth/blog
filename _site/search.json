[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Michael’s Blog",
    "section": "",
    "text": "5 Weeks - Day 35\n\n\n\n\n\nTBD \n\n\n\n\n\nMay 24, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 34\n\n\n\n\n\nmarquee \n\n\n\n\n\nMay 23, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 33\n\n\n\n\n\nTBD \n\n\n\n\n\nMay 22, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 32\n\n\n\n\n\nTBD \n\n\n\n\n\nMay 21, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 31\n\n\n\n\n\nTBD \n\n\n\n\n\nMay 20, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 30\n\n\n\n\n\nTBD \n\n\n\n\n\nMay 19, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 29\n\n\n\n\n\nTBD \n\n\n\n\n\nMay 18, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 28\n\n\n\n\n\nTBD \n\n\n\n\n\nMay 17, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 27\n\n\n\n\n\nTBD \n\n\n\n\n\nMay 16, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 26\n\n\n\n\n\n3 minute Wednesdays \n\n\n\n\n\nMay 15, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 25\n\n\n\n\n\nTBD \n\n\n\n\n\nMay 14, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 24\n\n\n\n\n\nCoffee \n\n\n\n\n\nMay 13, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 23\n\n\n\n\n\nTBD \n\n\n\n\n\nMay 12, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 22\n\n\n\n\n\nTBD \n\n\n\n\n\nMay 11, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 21\n\n\n\n\n\nTBD \n\n\n\n\n\nMay 10, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 20\n\n\n\n\n\nTBD \n\n\n\n\n\nMay 9, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 19\n\n\n\n\n\nShinylive \n\n\n\n\n\nMay 8, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 18\n\n\n\n\n\nMore Tidy Tuesday! \n\n\n\n\n\nMay 7, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 17\n\n\n\n\n\nWhat happened to 15 and 16? \n\n\n\n\n\nMay 6, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 14\n\n\n\n\n\n\n\n\n\n\n\nMay 3, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 13\n\n\n\n\n\nShiny Thursday \n\n\n\n\n\nMay 2, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 12\n\n\n\n\n\nTune up day \n\n\n\n\n\nMay 1, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 11\n\n\n\n\n\nYYC Weather \n\n\n\n\n\nApr 30, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 10\n\n\n\n\n\nDouble Digits! \n\n\n\n\n\nApr 29, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 9\n\n\n\n\n\nSunday Choresday \n\n\n\n\n\nApr 28, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 8\n\n\n\n\n\nSaturdays are for the blogs \n\n\n\n\n\nApr 27, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 7\n\n\n\n\n\nIt’s been… one week \n\n\n\n\n\nApr 26, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 6\n\n\n\n\n\nTidy Thursday \n\n\n\n\n\nApr 25, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 5\n\n\n\n\n\nAI in RStudio \n\n\n\n\n\nApr 24, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 4\n\n\n\n\n\nRadio and Quarto \n\n\n\n\n\nApr 23, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 3\n\n\n\n\n\nMondays! \n\n\n\n\n\nApr 22, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 2\n\n\n\n\n\nWe doing this \n\n\n\n\n\nApr 21, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 1\n\n\n\n\n\nA personal challenge to build a portfolio \n\n\n\n\n\nApr 20, 2024\n\n\n\n\n\n\n\nRe-creating a Shiny App for TidyTuesday plots\n\n\n\n\n\nCan I re-create Nicola Rennie’s Shiny App? \n\n\n\n\n\nApr 4, 2024\n\n\n\n\n\n\n\nWeekend Project - Quarto 1.4\n\n\n\n\n\nA test of Quarto 1.4 and its new dashboarding capabilities \n\n\n\n\n\nOct 27, 2023\n\n\n\n\n\n\n\nLong overdue\n\n\n\n\n\n\nMisc\n\n\n\nThe first of hopefully many… \n\n\n\n\n\nJul 3, 2023\n\n\n\n\n\n\n\nPlaceholder - Learnings\n\n\n\n\n\n\nLearning\n\n\n\nA placeholder post for my learning and development \n\n\n\n\n\nJul 2, 2023\n\n\n\n\n\n\n\nPlaceholder - Projects\n\n\n\n\n\n\nProjects\n\n\n\nA placeholder post for larger project posts \n\n\n\n\n\nJul 2, 2023\n\n\n\n\n\n\n\nPlaceholder - Tidy Tuesday\n\n\n\n\n\n\nTidy Tuesday\n\n\n\nA placeholder post for Tidy Tuesday posts \n\n\n\n\n\nJul 2, 2023\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "archive.html",
    "href": "archive.html",
    "title": "Archive",
    "section": "",
    "text": "5 Weeks - Day 35\n\n\n\n\n\n\n\n\nMay 24, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 34\n\n\n\n\n\n\n\n\nMay 23, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 33\n\n\n\n\n\n\n\n\nMay 22, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 32\n\n\n\n\n\n\n\n\nMay 21, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 31\n\n\n\n\n\n\n\n\nMay 20, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 30\n\n\n\n\n\n\n\n\nMay 19, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 29\n\n\n\n\n\n\n\n\nMay 18, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 28\n\n\n\n\n\n\n\n\nMay 17, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 27\n\n\n\n\n\n\n\n\nMay 16, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 26\n\n\n\n\n\n\n\n\nMay 15, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 25\n\n\n\n\n\n\n\n\nMay 14, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 24\n\n\n\n\n\n\n\n\nMay 13, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 23\n\n\n\n\n\n\n\n\nMay 12, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 22\n\n\n\n\n\n\n\n\nMay 11, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 21\n\n\n\n\n\n\n\n\nMay 10, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 20\n\n\n\n\n\n\n\n\nMay 9, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 19\n\n\n\n\n\n\n\n\nMay 8, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 18\n\n\n\n\n\n\n\n\nMay 7, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 17\n\n\n\n\n\n\n\n\nMay 6, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 14\n\n\n\n\n\n\n\n\nMay 3, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 13\n\n\n\n\n\n\n\n\nMay 2, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 12\n\n\n\n\n\n\n\n\nMay 1, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 11\n\n\n\n\n\n\n\n\nApr 30, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 10\n\n\n\n\n\n\n\n\nApr 29, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 9\n\n\n\n\n\n\n\n\nApr 28, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 8\n\n\n\n\n\n\n\n\nApr 27, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 7\n\n\n\n\n\n\n\n\nApr 26, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 6\n\n\n\n\n\n\n\n\nApr 25, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 5\n\n\n\n\n\n\n\n\nApr 24, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 4\n\n\n\n\n\n\n\n\nApr 23, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 3\n\n\n\n\n\n\n\n\nApr 22, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 2\n\n\n\n\n\n\n\n\nApr 21, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 1\n\n\n\n\n\n\n\n\nApr 20, 2024\n\n\n\n\n\n\n\nRe-creating a Shiny App for TidyTuesday plots\n\n\n\n\n\n\n\n\nApr 4, 2024\n\n\n\n\n\n\n\nWeekend Project - Quarto 1.4\n\n\n\n\n\n\n\n\nOct 27, 2023\n\n\n\n\n\n\n\nLong overdue\n\n\n\n\n\n\n\n\nJul 3, 2023\n\n\n\n\n\n\n\nPlaceholder - Learnings\n\n\n\n\n\n\n\n\nJul 2, 2023\n\n\n\n\n\n\n\nPlaceholder - Projects\n\n\n\n\n\n\n\n\nJul 2, 2023\n\n\n\n\n\n\n\nPlaceholder - Tidy Tuesday\n\n\n\n\n\n\n\n\nJul 2, 2023\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2023-10-27-weekend-project--quarto-14/index.html",
    "href": "posts/2023-10-27-weekend-project--quarto-14/index.html",
    "title": "Weekend Project - Quarto 1.4",
    "section": "",
    "text": "Inspired by Drop #362 (2023-10-27): Weekend Project Edition."
  },
  {
    "objectID": "posts/2023-07-03-long-overdue/index.html",
    "href": "posts/2023-07-03-long-overdue/index.html",
    "title": "Long overdue",
    "section": "",
    "text": "A blog?\nI’ve decided to start a blog. I’m not particularly great at writing nor am I keen on making my writing public for the World to see. So what am I doing here?\nWell, a blog seems like a great way for Data People to gather and share their work in a centralized place. I’m a Data Person. I don’t currently have a place to share my work but I’ve been meaning to create one for a long time. I guess I’ll go with a blog.\nI also became familiar with Quarto and Quarto blogs after virtually attending rstudio::conf(2022). Quarto seemed like an interesting tool to present personal data work and Quarto blogs seemed like a dead simple way to compile that work. Why not start a blog to get the hang of this tool?\n\n\nPlans\nFor the most part, this blog will consist of things for my own personal consumption and reference. Like I said, I’m not eager to share my work or my thoughts broadly but I’d still like to have a place where I can direct people if I need to ~ show off ~ for any reason. This will be that place.\nI plan to write about personal projects I’m working on, an analysis that I completed, maybe some thoughts and learnings from a book or a blog I’m reading, or perhaps just write for the sake of writing. A blog seems like a good place to compile these things, kind of like a journal, especially if I’ll be the primary consumer. I’d like to have this as a place where I can log things that I’m excited about.\n\n\nAcknowledgments\nThis is my first attempt at a blog and it wasn’t overly complicated to set-up thanks to a couple of really helpful references.\nAlbert Rapp created The ultimate guide to starting a Quarto blog which has been a phenomenal resource for me. Perhaps the best advice in this behemoth of a blog plost is to write regularly. I’ll give it a try, Albert!\nIsabella Velásquez also walked through building a blog with Quarto in this Youtube video. Thanks for this!"
  },
  {
    "objectID": "posts/2024-04-04-recreating-a-shiny-app-for-tidytuesday-plots/index.html",
    "href": "posts/2024-04-04-recreating-a-shiny-app-for-tidytuesday-plots/index.html",
    "title": "Re-creating a Shiny App for TidyTuesday plots",
    "section": "",
    "text": "Introduciton\nI started getting into TidyTuesday again recently. This, timed with Nicola Rennie’s post about her webR powered Shiny App, inspired me to try and build a Shiny App to display my TidyTuesday plots! And by build, I mean re-create (rip-off?) her Shiny App, but with my plots.\n\n\nTidy directory\nRight off the hop, she talks about a pretty consistent structure to her TidyTuesday repository. Looking at mine, it’s not completely disorganized but could use some tidying. I guess a TidyTuesday repository should be tidy so let’s go ahead and do that.\nFirst, a separate directory to organize each week’s TidyTuesday plots and code: /yyyy/yyyy-mm-dd/. My code files and plot image files were already named fairly well. yyyy-mm-dd.R was the format for the code files, and yyyy-mm-dd_plot_title.png was the format for the plot image files. This seems to line up well enough with Nicola’s standard, so I’ll leave them as is.\nShe also leverages the READMEs she has for each Tidy Tuesday to extract information about the plot title for that specific week. There are occasions where I save multiple plots for a single Tidy Tuesday so I might have to approach this a bit differently. For now, I’ll copy this approach as my initial idea to extract the plot titles from file names seemed messy. Maybe I can just reference my favourite plot from the week. Or perhaps the READMEs can have both plots. Regardless, I’m going to add some READMEs!\n\n\nExtract directory info\nNext up - create a tibble with information on all the Tidy Tuesday files in my Tidy Tuesday repository. Feel free to check out the post that outlines the code in more detail but a couple of neat lessons that I took away from this part:\n\nlist.dirs(): a fun little function to produce a character vector with file names and directory names in a specified directory! Kind of surprised I haven’t needed anything like this in the past\ntidyr::separate_wider_delim(): a handy tool to split up a string column into multiple string columns based on a delimeter. This function is handy because it handles when there are too few or too many splits. In this case, if there are too many cases, we just drop the remainder.\ntidyr::separate_longer_delim():\nmutate(new_col = NA_character_): instead of blindly assigning NA values to a new column, this ensures it is a character column! Looks like you can do this with integers and real numbers as well. I’m sure there are others but a quick google search didn’t bring up a full list.\nstop(): this wasn’t referenced in the blog post but I wasn’t sure how to handle errors in R. I think this seems to be a suitable replacement for the try/except statements that I’m used to in python\nattachment: this library was leveraged to find the packages used for each Tidy Tuesday script. Had not seen this before. Pretty cool.\ntidyr::complete():"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Michael Ellsworth",
    "section": "",
    "text": "This is a personal blog. A notepad of sorts. On data and music.\nEmail Me"
  },
  {
    "objectID": "posts/2024-04-21-5-weeks--day-2/index.html",
    "href": "posts/2024-04-21-5-weeks--day-2/index.html",
    "title": "5 Weeks - Day 2",
    "section": "",
    "text": "To be honest, I didn’t think I’d get to day 2. This is a pretty big accomplishment. I can now draw a trend line. Two days in a row, baby!\nToday I completed the tedious task of creating READMEs for each of my contributions to Tidy Tuesday. This was a good exercise in making my weekly submissions more visible, as well as setting my repository up for extracting plot titles for the webR app I’m working on. It also helped me realize that I have quite a few unfinished Tidy Tuesday plots.\nThis reminds me that I should probably brainstorm some things I may want to accomplish over these 5 weeks. Considering I made it to day 2 (hell yeah!), there is a much more likely chance that I may actually accomplish a few things here. Here’s what I have so far:\n\nClean up and finish half baked Tidy Tuesday submissions\n\nSome you’ve barely started to code, some you’ve got a pretty garbage looking plot. Clean these bad boys up, Mike!\nWhile I’m here, might as well keep up the weekly habit of contributing to Tidy Tuesday! Flex those ggplot muscles, brother!\nMore Tidy Tuesday thoughts… What am I learning about each week? Maybe write more about that.\n\nCreate a shareable webR app to display Tidy Tuesday submissions\n\nI’m hoping this webR app doesn’t dominate this “blog” over the next 5 weeks but it’s been a slow go so far. But for a good reason. It’s been a great learning exercise. Why rush through it?\n\nDevelop a Shiny application for viewing basic Ultimate statistics\n\nThis will be a relatively easy exercise (famous last words you doof!) but it’s been a while since I’ve created anything in Shiny. Time to get on this band wagon again.\n\nFigure out how I can intersect my interest in data and my interest in radio/music\n\nI host a weekly radio program where I select records for 90 minutes. I have over 4,000 songs that I’ve played over the last 4 years. Why not tell some sort of data story here?\n\nExplore Survival Analysis in Tidy Models\n\nI’ve been thinking about a lot of different work related use cases for Survival Analysis recently. Why not check out how it’s done in Tidy Models? I’m sure they make it fairly straight forward to do!\n\nPlot GitHub contributions at the end of the 5 weeks\n\nThere was a ggplot version of this plot that I came across. Try and re-create this.\n\n\nPerhaps I can do some more brainstorming later but I think that’s a good start. Lots to think about over the next 5 weeks!"
  },
  {
    "objectID": "posts/2024-04-20-5-weeks--day-1/index.html",
    "href": "posts/2024-04-20-5-weeks--day-1/index.html",
    "title": "5 Weeks - Day 1",
    "section": "",
    "text": "This is a diary entry of sorts. Day 1 of spending the next 5 weeks building a data related portfolio. Something I’ve been meaning to do for a while now.\nThis is a personal challenge. Can I commit 5 weeks to building something? What can I create in that time period? Will it be any good? Let’s see.\nDay 1 - continued progress on a webR app to display Tidy Tuesday plots. Based on how much I’m learning from this exercise, this whole 5 week challenge could potentially be about only this."
  },
  {
    "objectID": "posts/2024-04-22-5-weeks--day-3/index.html",
    "href": "posts/2024-04-22-5-weeks--day-3/index.html",
    "title": "5 Weeks - Day 3",
    "section": "",
    "text": "The biggest question I had for myself when starting this 5 week challenge was whether I would continue to bother with this after a day or two. The other was would I be able to find the time. There is plenty of time on the weekend to chip away at this portfolio, but what about weekdays?\nWell, here I am on a Monday (sunglasses emoji and/or looking smug emoji). I’ve managed to find a bit of time. This might not happen every weekday but I think I can set-up a routine to at least make small progress on weekdays.\nToday (Monday), I set my alarm a bit earlier than normal so that I could spend a bit of time on something prior to work. This should work on most weekdays but I might have to find a different strategy for Tuesdays. I moonlight as a radio DJ from 5:30 to 7:00 AM on Tuesday mornings and there ain’t no way I’m waking up any earlier than I normally do. I also play a little friz on Tuesday evenings so it might be tight! That’s a problem for tomorrow…\nA couple of things accomplished today:\n\nCombined two plots into one for one of my Tidy Tuesday submissions. To showcase Tidy Tuesday plots on a webR app, it seems easier to have one plot per week. I should be good on this front now.\nTested nested lists and nested vectors in R for storing a package list for each Tidy Tuesday script. Developing primarily in python over the last few years has made this process a bit foreign to me in R. I would have used a dictionary but R does not have a built-in dictionary data structure.\nCreated a bunch of awful for loops to create logical columns to indicate whether a Tidy Tuesday week uses a specific package. Turns out there were a few tidyr and dplyr functions that thankfully replaced this whole awful mess.\n\nDecent progress. One thing I’ve learned now that I’m 3 days into this is that progress will be fairly incremental. Spending 1-2 hours a day on this portfolio won’t be enough to create something extraordinary each day. It will be small lessons, minor improvements, and hopefully over time, something worth showing off."
  },
  {
    "objectID": "posts/2024-04-29-5-weeks--day-10/index.html",
    "href": "posts/2024-04-29-5-weeks--day-10/index.html",
    "title": "5 Weeks - Day 10",
    "section": "",
    "text": "Day 10 today. One more Tidy Tuesday down. Mr. Trash Wheel collects a lot of trash!\nImagine hand counting cigarette butts."
  },
  {
    "objectID": "posts/2024-04-27-5-weeks--day-8/index.html",
    "href": "posts/2024-04-27-5-weeks--day-8/index.html",
    "title": "5 Weeks - Day 8",
    "section": "",
    "text": "Damn! April 27th already.\nToday was perhaps the first day of this 5 week challenge where it took some will power to get on my computer and write a lil’ code. It was a pretty nice day outside and when I was inside, I was either putting together a tracklist for my radio show, going down a musical rabbit hole via the Micro-Chop, roasting a sick spicy salmon, doing some laundry, or taking a horizontal break (aka NAP). A proper quality Saturday.\nThankfully, I managed to will myself to my computer later in the evening to bang out the code to my Tidy Tuesday Shiny app. Outside of a few tweaks, it was a bit of a copy paste exercise but I managed to get a local version up and running pretty quickly. A success!"
  },
  {
    "objectID": "posts/2024-04-25-5-weeks--day-6/index.html",
    "href": "posts/2024-04-25-5-weeks--day-6/index.html",
    "title": "5 Weeks - Day 6",
    "section": "",
    "text": "Before I can properly set-up my Tidy Tuesday Shiny webR app, I’ll need to ensure I have at least one plot for each Tidy Tuesday week I have a directory for. An easier solution would be to delete these directories and fuhgeddaboudit, but why not finish what I started.\nLooking back, I have four weeks of unfinished Tidy Tuesdays:\n\n2023-03-28\n2024-03-05\n2024-04-09\n2024-04-16\n\nThis might take a few days…\nLooking back at the 2023-03-28 Tidy Tuesday README, there is a link to Twitter’s guidelines for how to add alt text to your images. To my surprise, the link isn’t broken! Looks like the folks who maintain the Tidy Tuesday repository gave up on mentioning Twitter on 2023-07-25 though.\n2023-03-28 is all about timezones. The plot ideas aren’t coming to me quickly here but I did manage to uncover some interesting tidbits about my timezone (Canada/Mountain).\n\nThe official record of the Canada/Mountain timezone began in 1906-09-01\nInitially, the timezone did not include daylight savings time until 1918\nDST was then abandoned between 1923 and 1942 before changing to permanent DST between 1942 and 1945\nAfter some brief back and forth between DST and standard time, permanent standard time lasted from 1947 to 1972. The glory years.\nFrom 1972 on, the twice a year switch between DST to ST persists. Boo!"
  },
  {
    "objectID": "posts/2024-04-23-5-weeks--day-4/index.html",
    "href": "posts/2024-04-23-5-weeks--day-4/index.html",
    "title": "5 Weeks - Day 4",
    "section": "",
    "text": "April 23rd, 2024. Can we start the countdown to Gemini szn?\nIt’s 6 AM here at the CJSW radio studio. We’re broadcasting some Tom Skinner this morning. A brand new 20 minute live track from his forthcoming record, Voices of Bishara Live at “Mu”.\nI’ve wanted to do a little data/radio crossover for a bit so that’s what I’ve focused on today. I have my full 4 year historical tracklist saved in a Google Sheet so why not see if I can read that into Quarto and play around with the data.\ngooglesheets4 appears to be the Posit built R interface to Google Sheets so I’m going to give that a try. Fun fact - the 4 in googlesheets4 references the version of the Sheets API. It’s not because Jennifer Bryan (the developer of googlesheets4) liked the number 4. In my opinion, that would have been a good enough reason :)\nSince my radio tracklist is saved in a private Google Sheet, authentication will be required. Looks like googledrive is needed to sort that out.\n\n# library(googledrive)\n# library(googlesheets4)\n# \n# drive_auth()\n# gs4_auth(token = drive_token())\n\nOkay authentication was a lot easier than I thought it would be. Two functions: drive_auth() and gs4_auth() is all it took, along with some browser clicks that lets the API access my Google Drive. We should be in business now.\n\n# tracklist &lt;- read_sheet(\n#   \"https://docs.google.com/spreadsheets/d/1L_aDq6GCrTqJQqjgYCsWrv5l3QYM2z09rrs-11KnhvM/edit#gid=0\",\n#   \"Tracklist\",\n#   skip = 1\n# )"
  },
  {
    "objectID": "posts/2024-04-24-5-weeks--day-5/index.html",
    "href": "posts/2024-04-24-5-weeks--day-5/index.html",
    "title": "5 Weeks - Day 5",
    "section": "",
    "text": "I came across this blog post yesterday while scrolling through #rstats Mastodon and it inspired me to give chattr a try in RStudio. Based on the post, it looks like chattr simply allows for interaction with LLMs via a Shiny app in RStudio (or outside RStudio in a terminal).\nHere is the install script:\n\n# Install from GitHub\nlibrary(remotes)\nremotes::install_github(\"mlverse/chattr\")\n\nDownloading GitHub repo mlverse/chattr@HEAD\n\n\nfs (1.6.3 -&gt; 1.6.4) [CRAN]\n\n\nInstalling 1 packages: fs\n\n\npackage 'fs' successfully unpacked and MD5 sums checked\n\n\nWarning: cannot remove prior installation of package 'fs'\n\n\nWarning in file.copy(savedcopy, lib, recursive = TRUE): problem copying\nC:\\Users\\miellsworth\\AppData\\Local\\Programs\\R\\R-4.3.3\\library\\00LOCK\\fs\\libs\\x64\\fs.dll\nto\nC:\\Users\\miellsworth\\AppData\\Local\\Programs\\R\\R-4.3.3\\library\\fs\\libs\\x64\\fs.dll:\nPermission denied\n\n\nWarning: restored 'fs'\n\n\n\nThe downloaded binary packages are in\n    C:\\Users\\miellsworth\\AppData\\Local\\Temp\\RtmpigYlbx\\downloaded_packages\n\n\nRunning `R CMD build`...\n\n\n* checking for file 'C:\\Users\\miellsworth\\AppData\\Local\\Temp\\RtmpigYlbx\\remotes151c14614eb6\\mlverse-chattr-4e4d170/DESCRIPTION' ... OK\n* preparing 'chattr':\n* checking DESCRIPTION meta-information ... OK\n* checking for LF line-endings in source and make files and shell scripts\n* checking for empty or unneeded directories\nOmitted 'LazyData' from DESCRIPTION\n* building 'chattr_0.1.0.tar.gz'\n\n\nIn the “Getting started” section of the post, running the app is done via the chattr_app() function but I’m getting a “No model setup found” error. Running ?chattr_use in the R Console pulls up some details to resolve this error. Looks like the easiest way to setup a model is to grab an OpenAI Personal Access Token (PAT). My preference would be to run a local LLM but maybe I can look into setting that up later.\nAfter creating a PAT on the OpenAI website, I created an .Renviron file in my project directory and saved the token there under OPENAI_API_KEY. It looks like that’s all it took to set-up the model. I can now run chattr_app().\n\nlibrary(chattr)\nchattr::chattr_app()\n\n• Provider:\n\n\n• Path/URL:\n\n\n• Model:\n\n\n• Label:\n\n\nShiny applications not supported in static R Markdown documents\n\n\nThis seems to open the Shiny App but sending a prompt to OpenAI doesn’t return any response. After an unfortunate amount of time looking through Google, running chattr::chattr(\"hello\") gives me an error message that might be a clue to resolving my problem:\n{error}Type:insufficient_quota\nMessage: You exceeded your current quota, please check your plan and billing details.\nBased on my usage details on the OpenAI website, I should have plenty of quota to work with. Other folks online have reported a similar issue and have noted that it goes away after a few days. Perhaps I’ll check back on this later.\nThis unsuccessful AI exercise reminds me that I need to read Molly White’s article AI isn’t useless. But is it worth it?. Unfortunately, I’m not sure this foray into chattr was worth much today!"
  },
  {
    "objectID": "posts/2024-04-26-5-weeks--day-7/index.html",
    "href": "posts/2024-04-26-5-weeks--day-7/index.html",
    "title": "5 Weeks - Day 7",
    "section": "",
    "text": "One week into this 5 week challenge. A challenge to contribute a lil’ something to my portfolio every day. An hour or two each day playing around with data, code, git, all that fun stuff.\nHere’s what I’ve accomplished so far:\n\nBrainstormed portfolio ideas and different things I can try and work on over these 5 weeks\nFinished a R script that will compile all of my Tidy Tuesday repository information for future reference by a Shiny app\nExplored my radio program’s historical tracklist from the start (2020-01-21) to today\nDived into an old unfinished Tidy Tuesday submission on timezone data\nMessed around with chattr, the Shiny app powered by a LLM\nBlogged about my progress each day\n\nOne thing that I was worried about while starting this challenge was what I would have to sacrifice to make time for this work. Overall, it doesn’t seem like much. Here’s how what I’ve been able to do outside of this challenge:\n\nContinue to work a full time job (wow, good for you!!)\nVisit family and friends\nGo to the movies (Art and Life: The Story of Jim Phillips - super sick!)\nGo to the mall and run other random errands (Chinook on a Saturdy - bad idea!!)\nPlay Ultimate (poorly)\nEat and sleep pretty well\n\nPerhaps the only thing that’s dropped off a bit is my daily step count, going form roughly 10,000 to 7,000 steps a day. I’m not overly worried about my activity levels yet considering I bike into work every day. I think that’s a decent sacrifice.\nAnyway, what’s the purpose of writing all this down? To convince myself that this shit isn’t that hard and that I shouldn’t have much problem carrying this on after the 5 weeks is over. One step at a time though.\nToday, I’m not sure what I’m going to work on yet. FINISH THIS PARAGRAPH ONCE YOU’VE DONE SOMETHING."
  },
  {
    "objectID": "posts/2024-04-28-5-weeks--day-9/index.html",
    "href": "posts/2024-04-28-5-weeks--day-9/index.html",
    "title": "5 Weeks - Day 9",
    "section": "",
    "text": "Sundays are for cleaning the house. I don’t make the rules, that’s just what Sundays are for. In keeping with this tradition, I’m going to do a little spring cleaning here at the blog.\nOutside of the four weeks of Tidy Tuesday submissions I need to finish, I want to spend today making sure this blog looks clean. I haven’t really rendered this thing since I’ve started and I’m not sure what the navigation looks like. Let’s spend today doing that.\nJUST KIDDING. I spent the whole day playing around with my plot for Tidy Tuesday week 2023-03-28, the timezone transitions week. In addition to struggling to figure out what to plot with this data, I spent probably an hour trying to figure out how to include a hyperlink in a ggplot2 image. A lot more difficult than I expected! I never did find a simple enough solution for my liking so I have now moved on. This stack overflow post appeared to have the most promise but the juice just wasn’t worth the squeeze for my use case. I feel like coming back to this issue but perhaps at a later date. And perhaps next Sunday I’ll get around to cleaning this blog."
  },
  {
    "objectID": "posts/2024-05-15-5-weeks--day-26/index.html",
    "href": "posts/2024-05-15-5-weeks--day-26/index.html",
    "title": "5 Weeks - Day 26",
    "section": "",
    "text": "Albert Rapp publishes a weekly post called 3 Minute Wednesdays (3MW) that I’ve been following for quite some time but haven’t really dived into the material in too much detail. The posts are quick learning opportunities that I think I should take more advantage of so today, I’ll be walking through the example from his post on event listeners for Shiny.\nFor this exercise, I’ll use the Shiny app I developed to visualize daily bike counts in Calgary. At the moment, the application renders a new plot every time a new location is selected from a dropdown menu. The lesson from this post is that we can control when the plot renders or in other words, we can control “reactivity”.\nThe post presents a number of ways to control reactivity but what I landed on was using bindEvent() in the server along with an actionButton() in the UI.\nThe gist of the original app looked like this:\nui &lt;- bslib::page_sidebar(\n  sidebar = sidebar(\n    # Dropdown menu\n    selectInput(\n      'location_dropdown',\n      'Select location',\n      choices = locations\n    )\n  ),\n  card(\n    plotOutput('bike_count_plot')\n  )\n)\n\nserver &lt;- function(input, output, session) {\n  output$bike_count_plot &lt;- renderPlot({\n    df %&gt;%\n      filter(monitoring_location == input$location_dropdown) %&gt;%\n      ggplot(aes(x = date, y = daily_total)) +\n      geom_point()\n}\n\nshinyApp(ui, server)\nIn order to control reactivity with an actionButton() and bindEvent(), I added what boils down to three lines of code:\n\nAdd actionButton() in the sidebar in the ui object\n\nactionButton('button', 'Reload Plot')  # New action button\n\nAdd req() in renderPlot() to require a click on the button to initiate reactivity\n\nreq(input$button &gt;= 1)\n\nPass renderPlot() into bindEvent() with input$button\n\nrenderPlot({}) |&gt; bindEvent(input$button)\nHere’s what the app looks like now:\nui &lt;- bslib::page_sidebar(\n  sidebar = sidebar(\n    # Dropdown menu\n    selectInput(\n      'location_dropdown',\n      'Select location',\n      choices = locations\n    ),\n    actionButton('button', 'Reload Plot')  # New action button\n  ),\n  card(\n    plotOutput('bike_count_plot')\n  )\n)\n\nserver &lt;- function(input, output, session) {\n  output$bike_count_plot &lt;- renderPlot({\n  req(input$button &gt;= 1)  # New function to specify reactivity conditions\n    df %&gt;%\n      filter(monitoring_location == input$location_dropdown) %&gt;%\n      ggplot(aes(x = date, y = daily_total)) +\n      geom_point()\n  }) |&gt; bindEvent(input$button)  # Isolate inputs with bindEvent()\n}\nshinyApp(ui, server)"
  },
  {
    "objectID": "posts/2024-05-07-5-weeks--day-18/index.html",
    "href": "posts/2024-05-07-5-weeks--day-18/index.html",
    "title": "5 Weeks - Day 18",
    "section": "",
    "text": "I came across a really well done Tidy Tuesday submission yesterday courtesy of Steven Ponce. One thing I love to do when I come across great viz is dive into the source code and check out all the clever ways they managed to make it happen. This example is no different.\nFor today’s submission, I’m going to create my own Tidy Tuesday submission while incorporating a couple of learnings from Steven’s submission."
  },
  {
    "objectID": "posts/2024-05-03-5-weeks--day-14/index.html",
    "href": "posts/2024-05-03-5-weeks--day-14/index.html",
    "title": "5 Weeks - Day 14",
    "section": "",
    "text": "I’m driving to Kelowna today to play some ULTIMATE Frisbee. The whole weekend will be filled with ultimate fun and perhaps not a ton of portfolio time. What I’m thinking for the next few days is to work on an Ultimate stats dashboard. I had started something a few months ago that I think would be worth chipping away at over the next few days.\nMore to come."
  },
  {
    "objectID": "posts/2024-05-23-5-weeks--day-34/index.html",
    "href": "posts/2024-05-23-5-weeks--day-34/index.html",
    "title": "5 Weeks - Day 34",
    "section": "",
    "text": "Today’s post explores an R package marquee, developed to parse markdown for R graphics. My first crack at the demo in the following blog post was futile due to the inherent limitations in the default graphics device in Windows (explained in the post under the limitations section), so I turned to my MacBook to run through a few of the examples provided.\n\nlibrary(marquee)\nlibrary(ggplot2)\nmd_text &lt;- \"\n# Heading 1\n## Heading 2\n### Heading 3\n\"\n\nggplot(mtcars) + \n  geom_point(aes(x = mpg, y = disp)) + \n  ggtitle(md_text) + \n  theme(plot.title = element_marquee(size = 8, width = unit(16, \"cm\")))\n\n\n\n\n\n\n\n\nThe first thing I notice on my mac is that the rendered markdown text is super grainy compared with the plot text. Likely a result of the limitations explained in the blog post. Looks like a lot of potential here but perhaps best suited for folks with a better understanding of computer graphics than me."
  },
  {
    "objectID": "posts/2024-05-09-5-weeks--day-20/index.html",
    "href": "posts/2024-05-09-5-weeks--day-20/index.html",
    "title": "5 Weeks - Day 20",
    "section": "",
    "text": "TBD"
  },
  {
    "objectID": "posts/2024-05-02-5-weeks--day-13/index.html",
    "href": "posts/2024-05-02-5-weeks--day-13/index.html",
    "title": "5 Weeks - Day 13",
    "section": "",
    "text": "Yesterday’s YYC bike data exploration left me with the urge to visualize the data via a Shiny app. The data seems well suited for it and would be interesting to explore in the future once the data is updated. So that’s what today’s portfolio contribution will focus on.\nThis Shiny urge was partially prompted by Albert Rapp’s recent 3 Minute Wednesday (3MW) post and Garrick Aden-Buie’s talk on bslib. Both release really good resources on Shiny and make it inviting to give things a try. Using a few code snippets from each post, I was able to spin up a basic Shiny app in a few minutes using the bike from yesterday. I added a simple reactive element to display daily bike counts based on a user defined monitoring location. Pretty simple but a fun little intro to Shiny."
  },
  {
    "objectID": "posts/2024-05-14-5-weeks--day-25/index.html",
    "href": "posts/2024-05-14-5-weeks--day-25/index.html",
    "title": "5 Weeks - Day 25",
    "section": "",
    "text": "Today will be dedicated to following the business report workflow outlined in the following GitHub repository."
  },
  {
    "objectID": "posts/2024-05-06-5-weeks--day-17/index.html",
    "href": "posts/2024-05-06-5-weeks--day-17/index.html",
    "title": "5 Weeks - Day 17",
    "section": "",
    "text": "At the onset of this 5 week challenge, I had an inkling that a two day out of town ultimate tourney might throw a wrench into my plans. Would I be able to complete my daily contribution while grinding it out on the ulti field? The answer is no. Hence why day 15 and 16 are contributionless. However, I’m plowing ahead!\nDay 17 of this 5 week challenge."
  },
  {
    "objectID": "posts/2024-05-13-5-weeks--day-24/index.html",
    "href": "posts/2024-05-13-5-weeks--day-24/index.html",
    "title": "5 Weeks - Day 24",
    "section": "",
    "text": "This week’s Tidy Tuesday dataset is related to coffee tasting. Since this boy is trying to wake up with a nice warm cup of coffee, it seems fitting to play around with this data today.\nLooks like most folks in this survey drink about 2 cups per day!"
  },
  {
    "objectID": "posts/2024-05-08-5-weeks--day-19/index.html",
    "href": "posts/2024-05-08-5-weeks--day-19/index.html",
    "title": "5 Weeks - Day 19",
    "section": "",
    "text": "A number of days ago, I created a very simple Shiny app to visualize Calgary bike counts at specific locations throughout the city. One thing I didn’t do with this app was deploy it, which is what today’s post will focus on.\nInstead of hosting the app on some sort of web app hosting platform, I’m going to test out the shinylive package. This is the serverless version of Shiny that I’ve seen used a couple of times but I’m going to follow Rami Krispin’s tutorial for this exercise.\nGoing into this exercise, I thought there would be much more to it. Turns out, all I had to do was rename my Shiny app file to app.R and run shinylive::export(appdir = \"shiny\", destdir = \"docs\"). Once the app finished rendering, I ran httpuv::runStaticServer(\"docs/\", port=8008) to get the app running on my browser.\nInclude some details on putting this on GitHub pages."
  },
  {
    "objectID": "posts/2024-04-30-5-weeks--day-11/index.html",
    "href": "posts/2024-04-30-5-weeks--day-11/index.html",
    "title": "5 Weeks - Day 11",
    "section": "",
    "text": "It’s April 30th, 2024 and it snowed today. A lot. It snowed a lot. This inspired me to look at the Government of Canada’s weather records for Calgary to see what data I could explore. This led me to Almanac Averages & Extremes. Let’s take a look at the downloadable data!\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\n\nAttaching package: 'janitor'\n\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\n\nRows: 366 Columns: 33\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (7): Station Name, Highest Temp. Period, Lowest Temp. Period, Greatest ...\ndbl (20): Longitude (x), Latitude (y), Climate ID, Month, Day, Average Max. ...\nlgl  (6): Highest Temp. Data Quality, Lowest Temp. Data Quality, Greatest Pr...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n# A tibble: 366 × 33\n   longitude_x latitude_y station_name climate_id month   day average_max_temp_c\n         &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;             &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;              &lt;dbl&gt;\n 1       -114.       51.1 CALGARY INT…    3031093     1     1               -2.7\n 2       -114.       51.1 CALGARY INT…    3031093     1     2               -2.7\n 3       -114.       51.1 CALGARY INT…    3031093     1     3               -2.8\n 4       -114.       51.1 CALGARY INT…    3031093     1     4               -2.9\n 5       -114.       51.1 CALGARY INT…    3031093     1     5               -2.9\n 6       -114.       51.1 CALGARY INT…    3031093     1     6               -3  \n 7       -114.       51.1 CALGARY INT…    3031093     1     7               -3  \n 8       -114.       51.1 CALGARY INT…    3031093     1     8               -3  \n 9       -114.       51.1 CALGARY INT…    3031093     1     9               -3.1\n10       -114.       51.1 CALGARY INT…    3031093     1    10               -3.1\n# ℹ 356 more rows\n# ℹ 26 more variables: average_min_temp_c &lt;dbl&gt;,\n#   frequency_of_precip_percent &lt;dbl&gt;, highest_temp_c &lt;dbl&gt;,\n#   highest_temp_year &lt;dbl&gt;, highest_temp_period &lt;chr&gt;,\n#   highest_temp_data_quality &lt;lgl&gt;, lowest_temp_c &lt;dbl&gt;,\n#   lowest_temp_year &lt;dbl&gt;, lowest_temp_period &lt;chr&gt;,\n#   lowest_temp_data_quality &lt;lgl&gt;, greatest_precip_mm &lt;dbl&gt;, …\n\n\nLooks like we have some weather records on our hands! Let’s take a look at April 30th to see what type of extremes we have dealt with on this day in the past.\n\ndf %&gt;%\n  filter(month == 4, day == 30) %&gt;%\n  select(\n    matches(\"average\"), \n    matches(\"highest\"), \n    matches(\"lowest\"), \n    matches(\"greatest\"),\n    matches(\"most\")\n  )\n\n# A tibble: 1 × 26\n  average_max_temp_c average_min_temp_c highest_temp_c highest_temp_year\n               &lt;dbl&gt;              &lt;dbl&gt;          &lt;dbl&gt;             &lt;dbl&gt;\n1               14.2                0.7           25.6              1941\n# ℹ 22 more variables: highest_temp_period &lt;chr&gt;,\n#   highest_temp_data_quality &lt;lgl&gt;, lowest_temp_c &lt;dbl&gt;,\n#   lowest_temp_year &lt;dbl&gt;, lowest_temp_period &lt;chr&gt;,\n#   lowest_temp_data_quality &lt;lgl&gt;, greatest_precip_mm &lt;dbl&gt;,\n#   greatest_precip_year &lt;dbl&gt;, greatest_precip_period &lt;chr&gt;,\n#   greatest_precip_data_quality &lt;lgl&gt;, greatest_rainfall_mm &lt;dbl&gt;,\n#   greatest_rainfall_year &lt;dbl&gt;, greatest_rainfall_period &lt;chr&gt;, …\n\n\nI’m curious to compare these with today’s conditions but we don’t have that data yet. Let’s come back to April 30th, perhaps tomorrow. In the meantime, let’s take a look at April 29th! We had a bit of rain and snow yesterday so let’s compare that to some historical records.\n\ndf_2024_04_29 &lt;- df %&gt;%\n  filter(month == 4, day == 29) %&gt;%\n  select(\n    matches(\"average\"), \n    matches(\"highest\"), \n    matches(\"lowest\"), \n    matches(\"greatest\"),\n    matches(\"most\")\n  )\n\ndaily_report_url &lt;- \"https://climate.weather.gc.ca/climate_data/bulk_data_e.html?format=csv&stationID=50430&Year=2024&Month=4&Day=1&time=&timeframe=2&submit=Download+Data\"\n\ndf_2024 &lt;- read_csv(daily_report_url) %&gt;%\n  janitor::clean_names() %&gt;%\n  mutate(date_time = lubridate::ymd(date_time))\n\nRows: 366 Columns: 31\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (11): Station Name, Month, Day, Max Temp Flag, Min Temp Flag, Mean Temp...\ndbl  (15): Longitude (x), Latitude (y), Climate ID, Year, Max Temp (°C), Min...\nlgl   (4): Data Quality, Total Rain Flag, Total Snow Flag, Total Precip Flag\ndate  (1): Date/Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "posts/2024-05-01-5-weeks--day-12/index.html",
    "href": "posts/2024-05-01-5-weeks--day-12/index.html",
    "title": "5 Weeks - Day 12",
    "section": "",
    "text": "May 1st, 2024. Today is tune up day. The day EVERYONE (me) has been waiting for. Easily one of the best perks about working at Suncor is FREE bicycle parking and FREE annual tune ups. It’s supposed to snow again today but that will not dissuade me from getting my bike all fixed up for the summer season.\nIn honour of tune up day, why not explore some City of Calgary bicycle data. The City has a plethora of public data available for perusal and bicycle data is no different. A quick search for “bicycle” returns a number of different datasets but the one I’m going to play around with is Bike Traffic Count.\n\nlibrary(readr)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(janitor)\n\n\nAttaching package: 'janitor'\n\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\nlibrary(lubridate)\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\nlibrary(tidyr)\n\ndf &lt;- read_csv(\"https://data.calgary.ca/api/views/pede-tz7g/rows.csv?date=20240501&accessType=DOWNLOAD\") %&gt;% janitor::clean_names()\n\nRows: 135093 Columns: 102\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (4): User Type, Monitoring Location, Direction, ID\ndbl  (97): Total, 0000, 0015, 0030, 0045, 0100, 0115, 0130, 0145, 0200, 0215...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nLooks we’ve got roughly four years of data to work with. A pretty hefty size as well.\n\npaste0(\"# rows: \", dim(df)[1], \", # columns: \", dim(df)[2])\n\n[1] \"# rows: 135093, # columns: 102\"\n\npaste0(\"Date range: \", min(df$date), \" - \", max(df$date))\n\n[1] \"Date range: 2018-01-01 - 2023-12-31\"\n\npryr::object_size(df)\n\n126.58 MB\n\n\nApparently we also have some pedestrian data hiding in here as well. Let’s take that out for now.\n\ndf %&gt;% count(user_type)\n\n# A tibble: 2 × 2\n  user_type     n\n  &lt;chr&gt;     &lt;int&gt;\n1 Bikes     95859\n2 Peds      39234\n\ndf_bikes &lt;- df %&gt;%\n  filter(user_type == \"Bikes\")\n\nThe dataframe is structured in a semi-wide format with a number of columns representing the time when the count was made. I’d rather have a single datetime column so we’re going to try and pivot_longer() this bad boy.\n\ndf_bikes_long &lt;- df_bikes %&gt;%\n  pivot_longer(\n    cols = c(x0000:x2345), \n    names_to = \"time\", \n    values_to = \"count\"\n    ) %&gt;%\n  mutate(date_time = ymd_hm(paste0(date, time)))\n\nThis balloons the size of the dataset but it’s tidy. And tidy is best.\n\npaste0(\"# rows: \", dim(df_bikes_long)[1], \", # columns: \", dim(df_bikes_long)[2])\n\n[1] \"# rows: 9202464, # columns: 9\"\n\npryr::object_size(df_bikes_long)\n\n674.44 MB\n\n\nSince I have no use for the fifteen minute intervals in this dataset, I’m going to summarise the bike counts into daily counts by each monitoring location. This takes the dataset down to a much more reasonable size.\n\ndf_daily_count &lt;- df_bikes_long %&gt;%\n  mutate(count = replace_na(count, 0)) %&gt;%\n  group_by(date, monitoring_location) %&gt;%\n  summarise(daily_total = sum(count)) %&gt;%\n  ungroup()\n\n`summarise()` has grouped output by 'date'. You can override using the\n`.groups` argument.\n\npaste0(\"# rows: \", dim(df_daily_count)[1], \", # columns: \", dim(df_daily_count)[2])\n\n[1] \"# rows: 40996, # columns: 3\"\n\npryr::object_size(df_daily_count)\n\n987.21 kB\n\n\nAlright, let’s take a look at a few interesting monitoring locations.\n\nlibrary(ggplot2)\ninteresting_locations &lt;- c(\n  \"Bow River Pathway\", \n  \"10 Street North of 5 Ave NW\",\n  \"Memorial Drive at Prince's Island\",\n  \"Memorial Drive at 19 St NW\"\n  )\n\ndf_daily_count %&gt;%\n  filter(monitoring_location %in% interesting_locations) %&gt;%\n  ggplot(aes(x = date, y = daily_total, col = monitoring_location)) +\n  geom_point() +\n  theme_classic() +\n  labs(\n    colour = NULL,\n    x = \"\",\n    y = \"Daily Bike Count\"\n  ) +\n  theme(\n    legend.position = \"bottom\"\n  )\n\n\n\n\n\n\n\n\nPretty clear seasonality in this data! Must be the harsh winters or something. Also interesting to see a noticeable drop off in cycling after 2020, likely because folks aren’t commuting as much. It might be interesting to look into the weekend data only to see if the same drop-off is observed. That would help confirm that theory, but I think that’s it for me today.\nPS - tune up day was NOT a success. Tune up guy was no longer accepting bikes by the time I got there. He basically laughed in my face! Apparently tune up day is popular."
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "Data blog",
    "section": "",
    "text": "5 Weeks - Day 35\n\n\n\n\n\nTBD \n\n\n\n\n\nMay 24, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 34\n\n\n\n\n\nmarquee \n\n\n\n\n\nMay 23, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 33\n\n\n\n\n\nTBD \n\n\n\n\n\nMay 22, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 32\n\n\n\n\n\nTBD \n\n\n\n\n\nMay 21, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 31\n\n\n\n\n\nTBD \n\n\n\n\n\nMay 20, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 30\n\n\n\n\n\nTBD \n\n\n\n\n\nMay 19, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 29\n\n\n\n\n\nTBD \n\n\n\n\n\nMay 18, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 28\n\n\n\n\n\nTBD \n\n\n\n\n\nMay 17, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 27\n\n\n\n\n\nTBD \n\n\n\n\n\nMay 16, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 26\n\n\n\n\n\n3 minute Wednesdays \n\n\n\n\n\nMay 15, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 25\n\n\n\n\n\nTBD \n\n\n\n\n\nMay 14, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 24\n\n\n\n\n\nCoffee \n\n\n\n\n\nMay 13, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 23\n\n\n\n\n\nTBD \n\n\n\n\n\nMay 12, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 22\n\n\n\n\n\nTBD \n\n\n\n\n\nMay 11, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 21\n\n\n\n\n\nTBD \n\n\n\n\n\nMay 10, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 20\n\n\n\n\n\nTBD \n\n\n\n\n\nMay 9, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 19\n\n\n\n\n\nShinylive \n\n\n\n\n\nMay 8, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 18\n\n\n\n\n\nMore Tidy Tuesday! \n\n\n\n\n\nMay 7, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 17\n\n\n\n\n\nWhat happened to 15 and 16? \n\n\n\n\n\nMay 6, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 14\n\n\n\n\n\n\n\n\n\n\n\nMay 3, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 13\n\n\n\n\n\nShiny Thursday \n\n\n\n\n\nMay 2, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 12\n\n\n\n\n\nTune up day \n\n\n\n\n\nMay 1, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 11\n\n\n\n\n\nYYC Weather \n\n\n\n\n\nApr 30, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 10\n\n\n\n\n\nDouble Digits! \n\n\n\n\n\nApr 29, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 9\n\n\n\n\n\nSunday Choresday \n\n\n\n\n\nApr 28, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 8\n\n\n\n\n\nSaturdays are for the blogs \n\n\n\n\n\nApr 27, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 7\n\n\n\n\n\nIt’s been… one week \n\n\n\n\n\nApr 26, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 6\n\n\n\n\n\nTidy Thursday \n\n\n\n\n\nApr 25, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 5\n\n\n\n\n\nAI in RStudio \n\n\n\n\n\nApr 24, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 4\n\n\n\n\n\nRadio and Quarto \n\n\n\n\n\nApr 23, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 3\n\n\n\n\n\nMondays! \n\n\n\n\n\nApr 22, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 2\n\n\n\n\n\nWe doing this \n\n\n\n\n\nApr 21, 2024\n\n\n\n\n\n\n\n5 Weeks - Day 1\n\n\n\n\n\nA personal challenge to build a portfolio \n\n\n\n\n\nApr 20, 2024\n\n\n\n\n\n\n\nRe-creating a Shiny App for TidyTuesday plots\n\n\n\n\n\nCan I re-create Nicola Rennie’s Shiny App? \n\n\n\n\n\nApr 4, 2024\n\n\n\n\n\n\n\nWeekend Project - Quarto 1.4\n\n\n\n\n\nA test of Quarto 1.4 and its new dashboarding capabilities \n\n\n\n\n\nOct 27, 2023\n\n\n\n\n\n\n\nLong overdue\n\n\n\n\n\n\nMisc\n\n\n\nThe first of hopefully many… \n\n\n\n\n\nJul 3, 2023\n\n\n\n\n\n\n\nPlaceholder - Learnings\n\n\n\n\n\n\nLearning\n\n\n\nA placeholder post for my learning and development \n\n\n\n\n\nJul 2, 2023\n\n\n\n\n\n\n\nPlaceholder - Projects\n\n\n\n\n\n\nProjects\n\n\n\nA placeholder post for larger project posts \n\n\n\n\n\nJul 2, 2023\n\n\n\n\n\n\n\nPlaceholder - Tidy Tuesday\n\n\n\n\n\n\nTidy Tuesday\n\n\n\nA placeholder post for Tidy Tuesday posts \n\n\n\n\n\nJul 2, 2023\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "data/2024-04-20-5-weeks--day-1/index.html",
    "href": "data/2024-04-20-5-weeks--day-1/index.html",
    "title": "5 Weeks - Day 1",
    "section": "",
    "text": "This is a diary entry of sorts. Day 1 of spending the next 5 weeks building a data related portfolio. Something I’ve been meaning to do for a while now.\nThis is a personal challenge. Can I commit 5 weeks to building something? What can I create in that time period? Will it be any good? Let’s see.\nDay 1 - continued progress on a webR app to display Tidy Tuesday plots. Based on how much I’m learning from this exercise, this whole 5 week challenge could potentially be about only this."
  },
  {
    "objectID": "data/2024-04-26-5-weeks--day-7/index.html",
    "href": "data/2024-04-26-5-weeks--day-7/index.html",
    "title": "5 Weeks - Day 7",
    "section": "",
    "text": "One week into this 5 week challenge. A challenge to contribute a lil’ something to my portfolio every day. An hour or two each day playing around with data, code, git, all that fun stuff.\nHere’s what I’ve accomplished so far:\n\nBrainstormed portfolio ideas and different things I can try and work on over these 5 weeks\nFinished a R script that will compile all of my Tidy Tuesday repository information for future reference by a Shiny app\nExplored my radio program’s historical tracklist from the start (2020-01-21) to today\nDived into an old unfinished Tidy Tuesday submission on timezone data\nMessed around with chattr, the Shiny app powered by a LLM\nBlogged about my progress each day\n\nOne thing that I was worried about while starting this challenge was what I would have to sacrifice to make time for this work. Overall, it doesn’t seem like much. Here’s how what I’ve been able to do outside of this challenge:\n\nContinue to work a full time job (wow, good for you!!)\nVisit family and friends\nGo to the movies (Art and Life: The Story of Jim Phillips - super sick!)\nGo to the mall and run other random errands (Chinook on a Saturdy - bad idea!!)\nPlay Ultimate (poorly)\nEat and sleep pretty well\n\nPerhaps the only thing that’s dropped off a bit is my daily step count, going form roughly 10,000 to 7,000 steps a day. I’m not overly worried about my activity levels yet considering I bike into work every day. I think that’s a decent sacrifice.\nAnyway, what’s the purpose of writing all this down? To convince myself that this shit isn’t that hard and that I shouldn’t have much problem carrying this on after the 5 weeks is over. One step at a time though.\nToday, I’m not sure what I’m going to work on yet. FINISH THIS PARAGRAPH ONCE YOU’VE DONE SOMETHING."
  },
  {
    "objectID": "data/2024-05-01-5-weeks--day-12/index.html",
    "href": "data/2024-05-01-5-weeks--day-12/index.html",
    "title": "5 Weeks - Day 12",
    "section": "",
    "text": "May 1st, 2024. Today is tune up day. The day EVERYONE (me) has been waiting for. Easily one of the best perks about working at Suncor is FREE bicycle parking and FREE annual tune ups. It’s supposed to snow again today but that will not dissuade me from getting my bike all fixed up for the summer season.\nIn honour of tune up day, why not explore some City of Calgary bicycle data. The City has a plethora of public data available for perusal and bicycle data is no different. A quick search for “bicycle” returns a number of different datasets but the one I’m going to play around with is Bike Traffic Count.\n\nlibrary(readr)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(janitor)\n\n\nAttaching package: 'janitor'\n\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\nlibrary(lubridate)\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\nlibrary(tidyr)\n\ndf &lt;- read_csv(\"https://data.calgary.ca/api/views/pede-tz7g/rows.csv?date=20240501&accessType=DOWNLOAD\") %&gt;% janitor::clean_names()\n\nRows: 135093 Columns: 102\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (4): User Type, Monitoring Location, Direction, ID\ndbl  (97): Total, 0000, 0015, 0030, 0045, 0100, 0115, 0130, 0145, 0200, 0215...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nLooks we’ve got roughly four years of data to work with. A pretty hefty size as well.\n\npaste0(\"# rows: \", dim(df)[1], \", # columns: \", dim(df)[2])\n\n[1] \"# rows: 135093, # columns: 102\"\n\npaste0(\"Date range: \", min(df$date), \" - \", max(df$date))\n\n[1] \"Date range: 2018-01-01 - 2023-12-31\"\n\npryr::object_size(df)\n\n126.58 MB\n\n\nApparently we also have some pedestrian data hiding in here as well. Let’s take that out for now.\n\ndf %&gt;% count(user_type)\n\n# A tibble: 2 × 2\n  user_type     n\n  &lt;chr&gt;     &lt;int&gt;\n1 Bikes     95859\n2 Peds      39234\n\ndf_bikes &lt;- df %&gt;%\n  filter(user_type == \"Bikes\")\n\nThe dataframe is structured in a semi-wide format with a number of columns representing the time when the count was made. I’d rather have a single datetime column so we’re going to try and pivot_longer() this bad boy.\n\ndf_bikes_long &lt;- df_bikes %&gt;%\n  pivot_longer(\n    cols = c(x0000:x2345), \n    names_to = \"time\", \n    values_to = \"count\"\n    ) %&gt;%\n  mutate(date_time = ymd_hm(paste0(date, time)))\n\nThis balloons the size of the dataset but it’s tidy. And tidy is best.\n\npaste0(\"# rows: \", dim(df_bikes_long)[1], \", # columns: \", dim(df_bikes_long)[2])\n\n[1] \"# rows: 9202464, # columns: 9\"\n\npryr::object_size(df_bikes_long)\n\n674.44 MB\n\n\nSince I have no use for the fifteen minute intervals in this dataset, I’m going to summarise the bike counts into daily counts by each monitoring location. This takes the dataset down to a much more reasonable size.\n\ndf_daily_count &lt;- df_bikes_long %&gt;%\n  mutate(count = replace_na(count, 0)) %&gt;%\n  group_by(date, monitoring_location) %&gt;%\n  summarise(daily_total = sum(count)) %&gt;%\n  ungroup()\n\n`summarise()` has grouped output by 'date'. You can override using the\n`.groups` argument.\n\npaste0(\"# rows: \", dim(df_daily_count)[1], \", # columns: \", dim(df_daily_count)[2])\n\n[1] \"# rows: 40996, # columns: 3\"\n\npryr::object_size(df_daily_count)\n\n987.21 kB\n\n\nAlright, let’s take a look at a few interesting monitoring locations.\n\nlibrary(ggplot2)\ninteresting_locations &lt;- c(\n  \"Bow River Pathway\", \n  \"10 Street North of 5 Ave NW\",\n  \"Memorial Drive at Prince's Island\",\n  \"Memorial Drive at 19 St NW\"\n  )\n\ndf_daily_count %&gt;%\n  filter(monitoring_location %in% interesting_locations) %&gt;%\n  ggplot(aes(x = date, y = daily_total, col = monitoring_location)) +\n  geom_point() +\n  theme_classic() +\n  labs(\n    colour = NULL,\n    x = \"\",\n    y = \"Daily Bike Count\"\n  ) +\n  theme(\n    legend.position = \"bottom\"\n  )\n\n\n\n\n\n\n\n\nPretty clear seasonality in this data! Must be the harsh winters or something. Also interesting to see a noticeable drop off in cycling after 2020, likely because folks aren’t commuting as much. It might be interesting to look into the weekend data only to see if the same drop-off is observed. That would help confirm that theory, but I think that’s it for me today.\nPS - tune up day was NOT a success. Tune up guy was no longer accepting bikes by the time I got there. He basically laughed in my face! Apparently tune up day is popular."
  },
  {
    "objectID": "data/2024-04-25-5-weeks--day-6/index.html",
    "href": "data/2024-04-25-5-weeks--day-6/index.html",
    "title": "5 Weeks - Day 6",
    "section": "",
    "text": "Before I can properly set-up my Tidy Tuesday Shiny webR app, I’ll need to ensure I have at least one plot for each Tidy Tuesday week I have a directory for. An easier solution would be to delete these directories and fuhgeddaboudit, but why not finish what I started.\nLooking back, I have four weeks of unfinished Tidy Tuesdays:\n\n2023-03-28\n2024-03-05\n2024-04-09\n2024-04-16\n\nThis might take a few days…\nLooking back at the 2023-03-28 Tidy Tuesday README, there is a link to Twitter’s guidelines for how to add alt text to your images. To my surprise, the link isn’t broken! Looks like the folks who maintain the Tidy Tuesday repository gave up on mentioning Twitter on 2023-07-25 though.\n2023-03-28 is all about timezones. The plot ideas aren’t coming to me quickly here but I did manage to uncover some interesting tidbits about my timezone (Canada/Mountain).\n\nThe official record of the Canada/Mountain timezone began in 1906-09-01\nInitially, the timezone did not include daylight savings time until 1918\nDST was then abandoned between 1923 and 1942 before changing to permanent DST between 1942 and 1945\nAfter some brief back and forth between DST and standard time, permanent standard time lasted from 1947 to 1972. The glory years.\nFrom 1972 on, the twice a year switch between DST to ST persists. Boo!"
  },
  {
    "objectID": "data/2023-07-03-long-overdue/index.html",
    "href": "data/2023-07-03-long-overdue/index.html",
    "title": "Long overdue",
    "section": "",
    "text": "A blog?\nI’ve decided to start a blog. I’m not particularly great at writing nor am I keen on making my writing public for the World to see. So what am I doing here?\nWell, a blog seems like a great way for Data People to gather and share their work in a centralized place. I’m a Data Person. I don’t currently have a place to share my work but I’ve been meaning to create one for a long time. I guess I’ll go with a blog.\nI also became familiar with Quarto and Quarto blogs after virtually attending rstudio::conf(2022). Quarto seemed like an interesting tool to present personal data work and Quarto blogs seemed like a dead simple way to compile that work. Why not start a blog to get the hang of this tool?\n\n\nPlans\nFor the most part, this blog will consist of things for my own personal consumption and reference. Like I said, I’m not eager to share my work or my thoughts broadly but I’d still like to have a place where I can direct people if I need to ~ show off ~ for any reason. This will be that place.\nI plan to write about personal projects I’m working on, an analysis that I completed, maybe some thoughts and learnings from a book or a blog I’m reading, or perhaps just write for the sake of writing. A blog seems like a good place to compile these things, kind of like a journal, especially if I’ll be the primary consumer. I’d like to have this as a place where I can log things that I’m excited about.\n\n\nAcknowledgments\nThis is my first attempt at a blog and it wasn’t overly complicated to set-up thanks to a couple of really helpful references.\nAlbert Rapp created The ultimate guide to starting a Quarto blog which has been a phenomenal resource for me. Perhaps the best advice in this behemoth of a blog plost is to write regularly. I’ll give it a try, Albert!\nIsabella Velásquez also walked through building a blog with Quarto in this Youtube video. Thanks for this!"
  },
  {
    "objectID": "data/2024-04-29-5-weeks--day-10/index.html",
    "href": "data/2024-04-29-5-weeks--day-10/index.html",
    "title": "5 Weeks - Day 10",
    "section": "",
    "text": "Day 10 today. One more Tidy Tuesday down. Mr. Trash Wheel collects a lot of trash!\nImagine hand counting cigarette butts."
  },
  {
    "objectID": "data/2024-04-04-recreating-a-shiny-app-for-tidytuesday-plots/index.html",
    "href": "data/2024-04-04-recreating-a-shiny-app-for-tidytuesday-plots/index.html",
    "title": "Re-creating a Shiny App for TidyTuesday plots",
    "section": "",
    "text": "Introduciton\nI started getting into TidyTuesday again recently. This, timed with Nicola Rennie’s post about her webR powered Shiny App, inspired me to try and build a Shiny App to display my TidyTuesday plots! And by build, I mean re-create (rip-off?) her Shiny App, but with my plots.\n\n\nTidy directory\nRight off the hop, she talks about a pretty consistent structure to her TidyTuesday repository. Looking at mine, it’s not completely disorganized but could use some tidying. I guess a TidyTuesday repository should be tidy so let’s go ahead and do that.\nFirst, a separate directory to organize each week’s TidyTuesday plots and code: /yyyy/yyyy-mm-dd/. My code files and plot image files were already named fairly well. yyyy-mm-dd.R was the format for the code files, and yyyy-mm-dd_plot_title.png was the format for the plot image files. This seems to line up well enough with Nicola’s standard, so I’ll leave them as is.\nShe also leverages the READMEs she has for each Tidy Tuesday to extract information about the plot title for that specific week. There are occasions where I save multiple plots for a single Tidy Tuesday so I might have to approach this a bit differently. For now, I’ll copy this approach as my initial idea to extract the plot titles from file names seemed messy. Maybe I can just reference my favourite plot from the week. Or perhaps the READMEs can have both plots. Regardless, I’m going to add some READMEs!\n\n\nExtract directory info\nNext up - create a tibble with information on all the Tidy Tuesday files in my Tidy Tuesday repository. Feel free to check out the post that outlines the code in more detail but a couple of neat lessons that I took away from this part:\n\nlist.dirs(): a fun little function to produce a character vector with file names and directory names in a specified directory! Kind of surprised I haven’t needed anything like this in the past\ntidyr::separate_wider_delim(): a handy tool to split up a string column into multiple string columns based on a delimeter. This function is handy because it handles when there are too few or too many splits. In this case, if there are too many cases, we just drop the remainder.\ntidyr::separate_longer_delim():\nmutate(new_col = NA_character_): instead of blindly assigning NA values to a new column, this ensures it is a character column! Looks like you can do this with integers and real numbers as well. I’m sure there are others but a quick google search didn’t bring up a full list.\nstop(): this wasn’t referenced in the blog post but I wasn’t sure how to handle errors in R. I think this seems to be a suitable replacement for the try/except statements that I’m used to in python\nattachment: this library was leveraged to find the packages used for each Tidy Tuesday script. Had not seen this before. Pretty cool.\ntidyr::complete():\n\nI assume this little tibble is going to be the key source data for this app.\n\n\nGithub actions\nNicola updates this tibble after every Tidy Tuesday contribution via a GitHub action. I’m a little hesitant to take this approach because this requires me to be a little more thoughtful about what I push to my main branch. Perhaps I should get in the habit of making feature branches for each Tidy Tuesday week and only pushing to main once a final product is ready. Regardless, I might as well set this up as a learning exercise.\nThe action itself is pretty straightforward but one thing I hadn’t seen was the “Commit files” step at the end. This allows the action to commit all of the created files from the action script. Since we’re updating the app data with this action, we’ll want that file committed during this action run. Pretty handy!\nAnother thing I haven’t leveraged in the past is GitHub Secrets. I’ll need to set-up a token to run the action and then save that token to this repository’s Secrets. For now, I’ll save the example .yml from Nicola’s post, with a few minor changes, and move on.\n\n\nShiny\nIt’s been a hot minute since I’ve played around with Shiny so this step was pretty foreign to me. I recall all the basic elements of setting up an app (the ui and the server), but it took some time to get used to the different layouts, panels, outputs and the reactive elements.\nI decided to differ slightly from Nicola’s app by ignoring the radio buttons and just sticking to a drop down list of all the plot titles. This makes the app code more simple and the actual interface a bit cleaner in my opinion. I like the idea of filtering plots based on packages used but I think it’s more of a nice to have at this point.\nOther than this one difference, the app code is basically the same and I was up and running with a local version pretty quickly."
  },
  {
    "objectID": "data/2023-10-27-weekend-project--quarto-14/index.html",
    "href": "data/2023-10-27-weekend-project--quarto-14/index.html",
    "title": "Weekend Project - Quarto 1.4",
    "section": "",
    "text": "Inspired by Drop #362 (2023-10-27): Weekend Project Edition."
  },
  {
    "objectID": "data/2024-04-27-5-weeks--day-8/index.html",
    "href": "data/2024-04-27-5-weeks--day-8/index.html",
    "title": "5 Weeks - Day 8",
    "section": "",
    "text": "Damn! April 27th already.\nToday was perhaps the first day of this 5 week challenge where it took some will power to get on my computer and write a lil’ code. It was a pretty nice day outside and when I was inside, I was either putting together a tracklist for my radio show, going down a musical rabbit hole via the Micro-Chop, roasting a sick spicy salmon, doing some laundry, or taking a horizontal break (aka NAP). A proper quality Saturday.\nThankfully, I managed to will myself to my computer later in the evening to bang out the code to my Tidy Tuesday Shiny app. Outside of a few tweaks, it was a bit of a copy paste exercise but I managed to get a local version up and running pretty quickly. A success!"
  },
  {
    "objectID": "data/2024-04-28-5-weeks--day-9/index.html",
    "href": "data/2024-04-28-5-weeks--day-9/index.html",
    "title": "5 Weeks - Day 9",
    "section": "",
    "text": "Sundays are for cleaning the house. I don’t make the rules, that’s just what Sundays are for. In keeping with this tradition, I’m going to do a little spring cleaning here at the blog.\nOutside of the four weeks of Tidy Tuesday submissions I need to finish, I want to spend today making sure this blog looks clean. I haven’t really rendered this thing since I’ve started and I’m not sure what the navigation looks like. Let’s spend today doing that.\nJUST KIDDING. I spent the whole day playing around with my plot for Tidy Tuesday week 2023-03-28, the timezone transitions week. In addition to struggling to figure out what to plot with this data, I spent probably an hour trying to figure out how to include a hyperlink in a ggplot2 image. A lot more difficult than I expected! I never did find a simple enough solution for my liking so I have now moved on. This stack overflow post appeared to have the most promise but the juice just wasn’t worth the squeeze for my use case. I feel like coming back to this issue but perhaps at a later date. And perhaps next Sunday I’ll get around to cleaning this blog."
  },
  {
    "objectID": "data/2024-05-15-5-weeks--day-26/index.html",
    "href": "data/2024-05-15-5-weeks--day-26/index.html",
    "title": "5 Weeks - Day 26",
    "section": "",
    "text": "Albert Rapp publishes a weekly post called 3 Minute Wednesdays (3MW) that I’ve been following for quite some time but haven’t really dived into the material in too much detail. The posts are quick learning opportunities that I think I should take more advantage of so today, I’ll be walking through the example from his post on event listeners for Shiny.\nFor this exercise, I’ll use the Shiny app I developed to visualize daily bike counts in Calgary. At the moment, the application renders a new plot every time a new location is selected from a dropdown menu. The lesson from this post is that we can control when the plot renders or in other words, we can control “reactivity”.\nThe post presents a number of ways to control reactivity but what I landed on was using bindEvent() in the server along with an actionButton() in the UI.\nThe gist of the original app looked like this:\nui &lt;- bslib::page_sidebar(\n  sidebar = sidebar(\n    # Dropdown menu\n    selectInput(\n      'location_dropdown',\n      'Select location',\n      choices = locations\n    )\n  ),\n  card(\n    plotOutput('bike_count_plot')\n  )\n)\n\nserver &lt;- function(input, output, session) {\n  output$bike_count_plot &lt;- renderPlot({\n    df %&gt;%\n      filter(monitoring_location == input$location_dropdown) %&gt;%\n      ggplot(aes(x = date, y = daily_total)) +\n      geom_point()\n}\n\nshinyApp(ui, server)\nIn order to control reactivity with an actionButton() and bindEvent(), I added what boils down to three lines of code:\n\nAdd actionButton() in the sidebar in the ui object\n\nactionButton('button', 'Reload Plot')  # New action button\n\nAdd req() in renderPlot() to require a click on the button to initiate reactivity\n\nreq(input$button &gt;= 1)\n\nPass renderPlot() into bindEvent() with input$button\n\nrenderPlot({}) |&gt; bindEvent(input$button)\nHere’s what the app looks like now:\nui &lt;- bslib::page_sidebar(\n  sidebar = sidebar(\n    # Dropdown menu\n    selectInput(\n      'location_dropdown',\n      'Select location',\n      choices = locations\n    ),\n    actionButton('button', 'Reload Plot')  # New action button\n  ),\n  card(\n    plotOutput('bike_count_plot')\n  )\n)\n\nserver &lt;- function(input, output, session) {\n  output$bike_count_plot &lt;- renderPlot({\n  req(input$button &gt;= 1)  # New function to specify reactivity conditions\n    df %&gt;%\n      filter(monitoring_location == input$location_dropdown) %&gt;%\n      ggplot(aes(x = date, y = daily_total)) +\n      geom_point()\n  }) |&gt; bindEvent(input$button)  # Isolate inputs with bindEvent()\n}\nshinyApp(ui, server)"
  },
  {
    "objectID": "music.html",
    "href": "music.html",
    "title": "Beat Salad Weekly",
    "section": "",
    "text": "Episode #248\n\n\n\n\n\nTBD \n\n\n\n\n\nNov 12, 2024\n\n\n\n\n\n\nNo matching items"
  }
]